#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

$:.unshift(File.dirname(__FILE__) + '/../lib')

require 'smith'

module Smith
  class SmithControl
    def send_command(command, args, &blk)
      Messaging::Sender.new('agency.control').ready do |sender|

        sender.timeout(2) { puts "Timeout. Is the agency still running"; Smith.stop(true) }

        payload = ACL::Payload.new(:agency_command).content(:command => command, :args => args)

        callback = proc do |sender|
          sender.publish_and_receive(payload, :persistent => true, &blk)
        end

        errback = proc do puts "Agency not running"
          Smith.stop(true)
        end

        sender.consumers?(callback, errback)
      end
    end
  end
end

command = ARGV.shift
args = ARGV

command || (puts "usage #{File.basename($0)} <command> opts]"; exit 2)

trap 'INT', proc { (Smith.running?) ? Smith.stop(true) : exit}

Smith.start(:quiet => true) do
  control = Smith::SmithControl.new
  control.send_command(command, args) do |header,payload|
    puts payload if payload && !payload.empty?
    Smith.stop(true)
  end
end
