#!/usr/bin/env ruby
# -*- encoding: utf-8 -*-

require 'pp'
require 'pathname'

root_path = Pathname.new('__FILE__').join('..').expand_path
$:.unshift(root_path.join('lib'))

require 'smith'
require 'smith/protocol_buffer_compiler'
require 'smith/application/agency'

module Smith
  class AgencyRunner

    include Logger

    def initialize(root)

      @compiler = ProtocolBufferCompiler.new
      @compiler.compile

      @agency = Agency.new(:paths => Smith.agent_paths)
    end

    def run
      Smith.start do
        logger.info("Starting #{File.basename($0)}")
        @agency.setup_queues
        @agency.start_monitoring
      end
    end
  end
end

%w{TERM INT QUIT}.each do |sig|
  trap sig, proc { puts "Shutting down"; Smith.stop(true) }
end

agency_runner = Smith::AgencyRunner.new(root_path)
agency_runner.run
